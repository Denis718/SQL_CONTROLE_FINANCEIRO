CREATE TABLE BANKS (
	bank_code INT PRIMARY KEY,
	name VARCHAR(80) NOT NULL,
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE CUSTOMERS (
	id INT PRIMARY KEY IDENTITY (1, 1),
	name VARCHAR (80) NOT NULL,
	custom_type VARCHAR(1) NOT NULL CHECK (custom_type IN('f', 'j')),
	email VARCHAR(40) NOT NULL,
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE BANK_ACCOUNTS (
	id INT PRIMARY KEY IDENTITY (1, 1),
	balance DECIMAL(7,2) NOT NULL,
	bank_code INT FOREIGN KEY REFERENCES BANKS(bank_code),
	customer_id INT FOREIGN KEY REFERENCES CUSTOMERS(id),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE PLANS (
	id TINYINT PRIMARY KEY IDENTITY (1,1),
	description VARCHAR(30) NOT NULL,
	duration SMALLINT NOT NULL,
	price DECIMAL(7,2),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE FEATURES (
	id SMALLINT PRIMARY KEY IDENTITY (1,1),
	name VARCHAR(30) NOT NULL,
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE SIGNATURES (
	id INT PRIMARY KEY IDENTITY (1, 1),
	expiration DATE NOT NULL,
	plan_id TINYINT FOREIGN KEY REFERENCES PLANS(id),
	customer_id INT FOREIGN KEY REFERENCES CUSTOMERS(id),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE PLAN_FEATURES (
	id INT PRIMARY KEY IDENTITY (1,1),
	plan_id TINYINT FOREIGN KEY REFERENCES PLANS(id),
	feature_id SMALLINT FOREIGN KEY REFERENCES FEATURES(id),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE USERS (
	id INT PRIMARY KEY IDENTITY (1, 1),
	username VARCHAR(30) NOT NULL,
	userpassword VARCHAR(20) NOT NULL,
	customer_id INT FOREIGN KEY REFERENCES CUSTOMERS(id),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE CARDS (
	id INT PRIMARY KEY IDENTITY (1, 1),
	description VARCHAR(20) NOT NULL,
	card_limit DECIMAL (7, 2) NOT NULL,
	customer_id INT FOREIGN KEY REFERENCES CUSTOMERS(id),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE OPERATION_TYPE (
	id TINYINT PRIMARY KEY IDENTITY (1, 1),
	description VARCHAR(20) NOT NULL,
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE CURRENCIES (
	id SMALLINT PRIMARY KEY IDENTITY (1, 1),
	name VARCHAR(20) NOT NULL,
	code VARCHAR(3) NOT NULL,
	symbol VARCHAR(5) NOT NULL,
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE CATEGORIES (
	id TINYINT PRIMARY KEY IDENTITY (1, 1),
	description VARCHAR(20) NOT NULL,
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE OPERATIONS (
	id INT PRIMARY KEY IDENTITY (1, 1),
	description VARCHAR(80) NOT NULL,
	expected_date DATE NOT NULL,
	effective_date DATE NOT NULL,
	expected_amount	DECIMAL(7,2) NOT NULL,
	amount_paid	DECIMAL(7,2) NOT NULL,
	link_documentation VARCHAR(100),
	customer_id INT FOREIGN KEY REFERENCES CUSTOMERS(id),
	optype_id TINYINT FOREIGN KEY REFERENCES OPERATION_TYPE(id),
	bank_acct_id INT FOREIGN KEY REFERENCES BANK_ACCOUNTS(id),
	category_id TINYINT FOREIGN KEY REFERENCES CATEGORIES(id),
	currency_id SMALLINT FOREIGN KEY REFERENCES CURRENCIES(id),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);

CREATE TABLE CARDS_OPERATIONS (
	id INT PRIMARY KEY IDENTITY (1, 1),
	installments TINYINT NOT NULL,
	card_id INT FOREIGN KEY REFERENCES CARDS(id),
	operation_id INT FOREIGN KEY REFERENCES OPERATIONS(id),
	active BIT NOT NULL,
	created_at DATETIME NOT NULL,
	created_by VARCHAR(30) NOT NULL,
	updated_at DATETIME NOT NULL,
	updated_by VARCHAR(30) NOT NULL
);